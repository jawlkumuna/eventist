version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: eventist_production_django
    volumes:
      - production_django_media:/app/eventist/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    ports:
      - '127.0.0.1:8007:5000'


  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: eventist_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/traefik/Dockerfile
  #   image: eventist_production_traefik
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_traefik:/etc/traefik/acme
  #   ports:
  #     - '0.0.0.0:80:80'
  #     - '0.0.0.0:443:443'
  #     - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6

  celeryworker:
    <<: *django
    image: eventist_production_celeryworker
    command: /start-celeryworker
    ports: []


  celerybeat:
    <<: *django
    image: eventist_production_celerybeat
    command: /start-celerybeat
    ports: []

  flower:
    <<: *django
    image: eventist_production_flower
    command: /start-flower
    ports:
      - '127.0.0.1:5007:5555'



  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: eventist_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    ports:
      - 127.0.0.1:9007:80
